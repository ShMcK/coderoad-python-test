{
  "version": "0.1.0",
  "summary": {
    "title": "Insert Tutorial's Title here",
    "description": "Short description to be shown as a tutorial's subtitle"
  },
  "config": {
    "testRunner": {
      "command": "python3 -m tap tests/*_test.py",
      "args": {
        "tap": ""
      },
      "setup": {
        "commands": [
          "pip3 install -r requirements.txt"
        ],
        "commits": [
          "36eba566e39d46c388f5ba78b48a6e7ba41b01c4"
        ]
      }
    },
    "repo": {
      "uri": "https://github.com/shmck/coderoad-python-test",
      "branch": "v0.1.1"
    }
  },
  "levels": [
    {
      "id": "L1",
      "steps": [
        {
          "id": "L1S1",
          "setup": {
            "subtasks": false,
            "commits": [
              "2e9f2fd92f0b7b8854e3d7bf47ae8c6787800066"
            ]
          },
          "solution": {
            "commits": [
              "cdbe4321b9c88a0067de3f65279ab9fb54a225e2"
            ]
          },
          "content": "Short description of the step's purpose. Should be short and fit in one line\n\n**Important**\n\n1. Both level and step ids must have an entry with the same id on the configuration file;\n2. Step Ids are based on its level id. Any step from level `L234` must start with `L234S`, followed by the sequential digits."
        }
      ],
      "title": "Put Level's title here",
      "summary": "Level's summary: a short description of the level's content in one line.",
      "content": "The level is identified and distributed following the regex:\n\n```js\n/^(##\\s(?<levelId>L\\d+)\\s(?<levelTitle>.*)\\n*(>\\s*(?<levelSummary>.*))?\\n+(?<levelContent>[^]*))/;\n```\n\nThe Level can be split into steps or have no steps. Levels without steps are meant to be used as only informative content, for example: use a Level without steps at the end of the tutorial to congratulate the student and provide some additional related resources.\n\nTutorial's content. It can span through multiple paragraphs and use headers `####` and `#####`.\n\nSteps are identified and their content described using the following regex:\n\n```js\n/^(###\\s(?<stepId>(?<levelId>L\\d+)S\\d+)\\s(?<stepTitle>.*)\\n+(?<stepContent>[^]*))/;\n```\n\nThe numbers identifying the levels and steps are irrelevant but keep in mind that they will be executed in order. A level with id `10` will be executed before another one with id `20` and so on. These `ids` should have a match in the configuration file (`coderoad.yaml`)."
    }
  ]
}